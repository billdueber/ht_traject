if [ $# -ne 2 ] 
then
  echo
  echo "catchup_since: run all deletes/includes in order since the given date"
  echo
  echo "USAGE:"
  echo "    catchup_since ht    YYYYMMDD     # for hathitrust"
  echo "    catchup_since umich YYYYMMDD     # for UMich/Mirlyn"
  echo
  exit
fi


export SCRIPTDIR=`dirname $0`
export TENV=$1 # umich or ht
DATESTR=$2

# Hathitrust uses yesterday's date as the last day
LASTDATE=`date --date "now - 1 day" +%Y%m%d`

# UMich uses the current date
if [ "$TENV" == "umich" ]; then
  LASTDATE=`date --date "now" +%Y%m%d`
  fi

# Set up JRUBY, TDIR, DDIR, $marcfile, $delfile
source $SCRIPTDIR/env/$TENV 


echo
echo Working on $HOSTNAME in $TDIR
echo

# is the date given valid? 'Cause `seq` is dumb about dates
function valid_date() {
 date -d "$1" > /dev/null 2>&1
}

for i in $(seq -f '%.0f' $DATESTR $LASTDATE ); do

  if !(valid_date "$i"); then
    echo "Skipping $i";
    continue;
  fi

  delfile=`find_del_file_for_date $i`
  if [ -f $delfile ] 
  then
    echo Deleting from $delfile
    echo Targeting $SOLR_URL
    cd $TDIR
    jruby -S bundle exec $JRUBY $SCRIPTDIR/delete_ids $delfile
  else
    echo "No Deletes: Could not find file '$delfile'"
  fi

  marcfile=`find_marc_file_for_date $i`
  if [ -f $marcfile ] 
  then
   cd $TDIR
   $SCRIPTDIR/tindex $TENV $DEFAULT_WRITER $marcfile
  else
    echo "No indexing: Could not find file '$marcfile'"
  fi
done

